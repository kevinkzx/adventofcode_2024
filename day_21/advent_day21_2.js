// i guess i need to write a recursion and memoize it for p2

const fs = require("fs");
let input = fs.readFileSync("advent_day21.txt").toString().split("\n");
let instructions = [];
for (let i = 0; i < input.length; i++) {
  instructions.push(input[i]);
}
console.log(instructions);

// prettier-ignore
let numPad = {
  '0': [['0', ['']], ['1', ['^<']], ['2', ['^']], ['3', ['^>', '>^']], ['4', ['^^<']], ['5', ['^^']], ['6', ['^^>', '>^^']], ['7', ['^^^<']], ['8', ['^^^']], ['9', ['^^^>', '>^^^']], ['A', ['>']]],
  '1': [['0', ['>v']], ['1', ['']], ['2', ['>']], ['3', ['>>']], ['4', ['^']], ['5', ['^>', '>^']], ['6', ['^>>', '>>^']], ['7', ['^^']], ['8', ['^^>', '>^^']], ['9', ['^^>>', '>>^^']], ['A', ['>>v']]],
  '2': [['0', ['v']], ['1', ['<']], ['2', ['']], ['3', ['>']], ['4', ['^<', '<^']], ['5', ['^']], ['6', ['^>', '>^']], ['7', ['^^<', '<^^']], ['8', ['^^']], ['9', ['^^>', '>^^']], ['A', ['v>', '>v']]],
  '3': [['0', ['v<', '<v']], ['1', ['<<']], ['2', ['<']], ['3', ['']], ['4', ['^<<', '<<^']], ['5', ['^<', '<^']], ['6', ['^']], ['7', ['^^<<', '<<^^']], ['8', ['^^<', '<^^']], ['9', ['^^']], ['A', ['v']]],
  '4': [['0', ['>vv']], ['1', ['v']], ['2', ['v>', '>v']], ['3', ['v>>', '>>v']], ['4', ['']], ['5', ['>']], ['6', ['>>']], ['7', ['^']], ['8', ['^>', '>^']], ['9', ['^>>', '>>^']], ['A', ['>>vv']]],
  '5': [['0', ['vv']], ['1', ['v<', '<v']], ['2', ['v']], ['3', ['v>', '>v']], ['4', ['<']], ['5', ['']], ['6', ['>']], ['7', ['^<', '<^']], ['8', ['^']], ['9', ['^>', '>^']], ['A', ['vv>', '>vv']]],
  '6': [['0', ['vv<', '<vv']], ['1', ['v<<', '<<v']], ['2', ['v<', '<v']], ['3', ['v']], ['4', ['<<']], ['5', ['<']], ['6', ['']], ['7', ['^<<', '<<^']], ['8', ['^<', '<^']], ['9', ['^']], ['A', ['vv']]],
  '7': [['0', ['>vvv']], ['1', ['vv']], ['2', ['>vv', 'vv>']], ['3', ['vv>>', '>>vv']], ['4', ['v']], ['5', ['v>', '>v']], ['6', ['v>>', '>>v']], ['7', ['']], ['8', ['>']], ['9', ['>>']], ['A', ['>>vvv']]],
  '8': [['0', ['vvv']], ['1', ['vv<', '<vv']], ['2', ['vv']], ['3', ['vv>', '>vv']], ['4', ['v<', '<v']], ['5', ['v']], ['6', ['v>', '>v']], ['7', ['<']], ['8', ['']], ['9', ['>']], ['A', ['vvv>', '>vvv']]],
  '9': [['0', ['vvv<', '<vvv']], ['1', ['vv<<', '<<vv']], ['2', ['vv<', '<vv']], ['3', ['vv']], ['4', ['v<<', '<<v']], ['5', ['v<', '<v']], ['6', ['v']], ['7', ['<<']], ['8', ['<']], ['9', ['']], ['A', ['vvv']]],
  'A': [['0', ['<']], ['1', ['^<<']], ['2', ['^<', '<^']], ['3', ['^']], ['4', ['^^<<']], ['5', ['^^<', '<^^']], ['6', ['^^']], ['7', ['^^^<<']], ['8', ['^^^<', '<^^^']], ['9', ['^^^']], ['A', ['']]]
}
// prettier-ignore
let arrowPad = {
  '^': [['^', ''], ['>', 'v>'], ['v', 'v'], ['<', 'v<'], ['A', '>']],
  '>': [['^', '^<'], ['>', ''], ['v', '<'], ['<', '<<'], ['A', '^']],
  'v': [['^', '^'], ['>', '>'], ['v', ''], ['<', '<'], ['A', '^>']],
  '<': [['^', '>^'], ['>', '>>'], ['v', '>'], ['<', ''], ['A', '>>^']],
  'A': [['^', '<'], ['>', 'v'], ['v', 'v<'], ['<', 'v<<'], ['A', '']]
}
